State 1 conflicts: 1 shift/reduce
State 25 conflicts: 7 shift/reduce, 10 reduce/reduce
State 69 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 162 conflicts: 1 shift/reduce
State 176 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce
State 285 conflicts: 3 shift/reduce, 10 reduce/reduce
State 472 conflicts: 3 shift/reduce, 10 reduce/reduce
State 537 conflicts: 2 shift/reduce
State 597 conflicts: 1 shift/reduce


Grammar

    0 $accept: start_program $end

    1 start_program: start_program single_input
    2              | start_program func_type_input
    3              | %empty

    4 single_input: simple_stmt
    5             | compound_stmt NEWLINE
    6             | NEWLINE

    7 newline_fecho: newline_fecho NEWLINE
    8              | %empty

    9 opt_arglist: arglist
   10            | %empty

   11 decorator: AT dotted_name NEWLINE
   12          | AT dotted_name LPAR opt_arglist RPAR NEWLINE

   13 decorator_fecho_plus: decorator_fecho_plus decorator
   14                     | decorator

   15 decorators: decorator_fecho_plus

   16 decorated: decorators classdef
   17          | decorators funcdef
   18          | decorators async_funcdef

   19 async_funcdef: ASYNC funcdef

   20 opt_arrow_test: ARROW test
   21               | %empty

   22 opt_typecomment: TYPE_COMMENT
   23                | %empty

   24 funcdef: DEF NAME parameters opt_arrow_test COLON opt_typecomment func_body_suite

   25 opt_typedargslist: typedargslist
   26                  | %empty

   27 parameters: LPAR opt_typedargslist RPAR

   28 opt_tfpdef: tfpdef
   29           | %empty

   30 kleene_gigante: kleene_gigante COMMA opt_typecomment tfpdef opt_equal_test
   31               | %empty

   32 opt_mediano: DOUBLESTAR tfpdef opt_comma opt_typecomment
   33            | %empty

   34 opt_maiorzin: COMMA opt_typecomment opt_mediano
   35             | %empty

   36 typecomment_or_maiorzin: TYPE_COMMENT
   37                        | opt_maiorzin

   38 star_e_outros_or_doublestar_e_outros: STAR opt_tfpdef kleene_gigante typecomment_or_maiorzin
   39                                     | DOUBLESTAR tfpdef opt_comma opt_typecomment

   40 opt_das_estrelas: star_e_outros_or_doublestar_e_outros
   41                 | %empty

   42 opt_comma_opts: COMMA opt_typecomment opt_das_estrelas
   43               | %empty

   44 type_comment_or_opt_comma_opts: TYPE_COMMENT
   45                               | opt_comma_opts

   46 or_enorme: opt_typecomment tfpdef opt_equal_test kleene_gigante type_comment_or_opt_comma_opts
   47          | star_e_outros_or_doublestar_e_outros

   48 opt_enorme: or_enorme
   49           | %empty

   50 opt_comma_enorme: COMMA opt_enorme
   51                 | %empty

   52 typedargslist: tfpdef opt_equal_test kleene_gigante COMMA opt_typecomment SLASH opt_comma_enorme
   53              | tfpdef opt_equal_test kleene_gigante type_comment_or_opt_comma_opts star_e_outros_or_doublestar_e_outros

   54 opt_colon_test: COLON test

   55 tfpdef: NAME opt_colon_test

   56 opt_equal_test: EQUAL test
   57               | %empty

   58 opt_comma: COMMA
   59          | %empty

   60 opt_vfpdef: vfpdef
   61           | %empty

   62 opt_doublestar_vfpdef_comma: DOUBLESTAR vfpdef opt_comma
   63                            | %empty

   64 opt_comma_e_o_de_cima: COMMA opt_doublestar_vfpdef_comma
   65                      | %empty

   66 comma_vfpdef_opt_equal_test_kleene: comma_vfpdef_opt_equal_test_kleene COMMA vfpdef opt_equal_test
   67                                   | %empty

   68 opt_menor_varargslist: STAR opt_vfpdef comma_vfpdef_opt_equal_test_kleene opt_comma_e_o_de_cima
   69                      | DOUBLESTAR vfpdef opt_comma
   70                      | %empty

   71 opt_segundo_menor_varargslist: COMMA opt_menor_varargslist
   72                              | %empty

   73 opt_terceiro_menor_varargslist: vfpdef opt_equal_test comma_vfpdef_opt_equal_test_kleene opt_segundo_menor_varargslist
   74                               | opt_menor_varargslist

   75 comma_slash: COMMA SLASH

   76 varargslist: vfpdef opt_equal_test comma_vfpdef_opt_equal_test_kleene comma_slash COMMA opt_terceiro_menor_varargslist
   77            | vfpdef opt_equal_test comma_vfpdef_opt_equal_test_kleene comma_slash
   78            | vfpdef opt_equal_test comma_vfpdef_opt_equal_test_kleene opt_segundo_menor_varargslist
   79            | STAR opt_vfpdef comma_vfpdef_opt_equal_test_kleene opt_comma_e_o_de_cima
   80            | DOUBLESTAR vfpdef opt_comma

   81 vfpdef: NAME

   82 stmt: simple_stmt
   83     | compound_stmt

   84 semicolon_smallstmt_fecho: semicolon_smallstmt_fecho SEMICOLON small_stmt
   85                          | %empty

   86 opt_semicolon: SEMICOLON
   87              | %empty

   88 simple_stmt: small_stmt semicolon_smallstmt_fecho opt_semicolon NEWLINE

   89 small_stmt: expr_stmt
   90           | del_stmt
   91           | pass_stmt
   92           | flow_stmt
   93           | import_stmt
   94           | global_stmt
   95           | nonlocal_stmt
   96           | assert_stmt

   97 yield_expr_or_testlist: yield_expr
   98                       | testlist

   99 yield_expr_or_testlist_star_expr: yield_expr
  100                                 | testlist_star_expr

  101 equal_yield_expr_or_testlist_star_expr_plus: equal_yield_expr_or_testlist_star_expr_plus EQUAL yield_expr_or_testlist_star_expr
  102                                            | EQUAL yield_expr_or_testlist_star_expr

  103 expr_stmt: testlist_star_expr annassign testlist_star_expr augassign yield_expr_or_testlist testlist_star_expr equal_yield_expr_or_testlist_star_expr_plus opt_typecomment testlist_star_expr

  104 annassign: COLON test EQUAL yield_expr_or_testlist_star_expr
  105          | COLON test

  106 comma_or_test_star_expr_kleene: comma_or_test_star_expr_kleene COMMA or_test_star_expr
  107                               | %empty

  108 testlist_star_expr: or_test_star_expr comma_or_test_star_expr_kleene opt_comma

  109 augassign: PLUSEQUAL
  110          | MINEQUAL
  111          | STAREQUAL
  112          | ATEQUAL
  113          | SLASHEQUAL
  114          | PERCENTEQUAL
  115          | AMPEREQUAL
  116          | VBAREQUAL
  117          | CIRCUMFLEXEQUAL
  118          | LEFTSHIFTEQUAL
  119          | RIGHTSHIFTEQUAL
  120          | DOUBLESTAREQUAL
  121          | DOUBLESLASHEQUAL

  122 del_stmt: DEL exprlist

  123 pass_stmt: PASS

  124 flow_stmt: break_stmt
  125          | continue_stmt
  126          | return_stmt
  127          | raise_stmt
  128          | yield_stmt

  129 break_stmt: BREAK

  130 continue_stmt: CONTINUE

  131 opt_testlist_star_expr: testlist_star_expr
  132                       | %empty

  133 return_stmt: RETURN opt_testlist_star_expr

  134 yield_stmt: yield_expr

  135 opt_from_test: FROM test
  136              | %empty

  137 opt_test_opt_from_test: test opt_from_test
  138                       | %empty

  139 raise_stmt: RAISE opt_test_opt_from_test

  140 import_stmt: import_name
  141            | import_from

  142 import_name: IMPORT dotted_as_names

  143 dot_or_ellipsis_kleene: dot_or_ellipsis_plus
  144                       | %empty

  145 dot_or_ellipsis_plus: dot_or_ellipsis_plus DOT
  146                     | dot_or_ellipsis_plus ELLIPSIS
  147                     | DOT
  148                     | ELLIPSIS

  149 dot_or_ellipsis_kleene_dotted_name_or_dot_or_ellipsis_plus: dot_or_ellipsis_kleene dotted_name
  150                                                           | dot_or_ellipsis_plus

  151 star_or_lpar_import_as_names_rpar_or_import_as_names: STAR
  152                                                     | LPAR import_as_names RPAR
  153                                                     | import_as_names

  154 import_from: FROM dot_or_ellipsis_kleene_dotted_name_or_dot_or_ellipsis_plus IMPORT star_or_lpar_import_as_names_rpar_or_import_as_names

  155 opt_as_name: AS NAME
  156            | %empty

  157 import_as_name: NAME opt_as_name

  158 dotted_as_name: dotted_name opt_as_name

  159 comma_import_as_name_kleene: comma_import_as_name_kleene COMMA import_as_name
  160                            | %empty

  161 import_as_names: import_as_name comma_import_as_name_kleene opt_comma

  162 comma_dotted_as_name_kleene: comma_dotted_as_name_kleene COMMA dotted_as_name
  163                            | %empty

  164 dotted_as_names: dotted_as_name comma_dotted_as_name_kleene

  165 dot_name_kleene: dot_name_kleene DOT NAME
  166                | %empty

  167 dotted_name: NAME dot_name_kleene

  168 comma_name_kleene: comma_name_kleene COMMA NAME
  169                  | %empty

  170 global_stmt: GLOBAL NAME comma_name_kleene

  171 nonlocal_stmt: NONLOCAL NAME comma_name_kleene

  172 opt_comma_test: COMMA test
  173               | %empty

  174 assert_stmt: ASSERT test opt_comma_test

  175 compound_stmt: if_stmt
  176              | while_stmt
  177              | for_stmt
  178              | try_stmt
  179              | with_stmt
  180              | funcdef
  181              | classdef
  182              | decorated
  183              | async_stmt

  184 async_stmt: ASYNC funcdef
  185           | ASYNC with_stmt
  186           | ASYNC for_stmt

  187 if_stmt: IF namedexpr_test COLON suite elif_colon_suite_kleene opt_else_colon_suite

  188 elif_colon_suite_kleene: elif_colon_suite_kleene ELIF namedexpr_test COLON suite
  189                        | %empty

  190 while_stmt: WHILE namedexpr_test COLON suite opt_else_colon_suite

  191 for_in_colon_prefix: FOR exprlist IN testlist COLON

  192 for_stmt: for_in_colon_prefix opt_typecomment suite opt_else_colon_suite

  193 opt_else_colon_suite: ELSE COLON suite
  194                     | %empty

  195 opt_finally_colon_suite: FINALLY COLON suite
  196                        | %empty

  197 exceptclausecolonsuite_plus: exceptclausecolonsuite_plus except_clause COLON suite
  198                            | except_clause COLON suite

  199 start_try_stmt: TRY COLON suite

  200 try_stmt: start_try_stmt exceptclausecolonsuite_plus opt_else_colon_suite opt_finally_colon_suite
  201         | start_try_stmt FINALLY COLON suite

  202 comma_with_item_kleene: comma_with_item_kleene COMMA with_item
  203                       | %empty

  204 with_stmt: WITH with_item comma_with_item_kleene COLON opt_typecomment suite

  205 opt_as_expr: AS expr
  206            | %empty

  207 with_item: test opt_as_expr

  208 opt_test_opt_as_name: test opt_as_name
  209                     | %empty

  210 except_clause: EXCEPT opt_test_opt_as_name

  211 suite: simple_stmt
  212      | NEWLINE INDENT stmt_kleene_plus DEDENT

  213 opt_colonequal_test: COLONEQUAL test
  214                    | %empty

  215 namedexpr_test: test opt_colonequal_test

  216 opt_if_ortest_else_test: IF or_test ELSE test
  217                        | %empty

  218 test: or_test opt_if_ortest_else_test
  219     | lambdef

  220 test_nocond: or_test
  221            | lambdef_nocond

  222 opt_varargslist: varargslist
  223                | %empty

  224 prefix_lambdef: LAMBDA opt_varargslist COLON

  225 lambdef: prefix_lambdef test

  226 lambdef_nocond: prefix_lambdef test_nocond

  227 or_and_test_kleene: or_and_test_kleene OR and_test
  228                   | %empty

  229 or_test: and_test or_and_test_kleene

  230 and_not_test_kleene: and_not_test_kleene AND not_test
  231                    | %empty

  232 and_test: not_test and_not_test_kleene

  233 not_test: NOT not_test
  234         | comparison

  235 comp_op_kleene: comp_op_kleene comp_op expr
  236               | %empty

  237 comparison: expr comp_op_kleene

  238 comp_op: LESS
  239        | GREATER
  240        | EQEQUAL
  241        | GREATEREQUAL
  242        | LESSEQUAL
  243        | NOTEQUAL
  244        | IN
  245        | NOT IN
  246        | IS
  247        | IS NOT

  248 star_expr: STAR expr

  249 vbar_xor_expr_kleene: vbar_xor_expr_kleene VBAR xor_expr
  250                     | %empty

  251 expr: xor_expr vbar_xor_expr_kleene

  252 circumflex_and_expr_kleene: circumflex_and_expr_kleene CIRCUMFLEX and_expr
  253                           | %empty

  254 xor_expr: and_expr circumflex_and_expr_kleene

  255 amper_shift_expr_kleene: amper_shift_expr_kleene AMPER shift_expr
  256                        | %empty

  257 and_expr: shift_expr amper_shift_expr_kleene

  258 left_shift_or_right_shift: LEFTSHIFT
  259                          | RIGHTSHIFT

  260 left_shift_or_right_shift_arith_expr_kleene: left_shift_or_right_shift_arith_expr_kleene left_shift_or_right_shift arith_expr
  261                                            | %empty

  262 shift_expr: arith_expr left_shift_or_right_shift_arith_expr_kleene

  263 plus_or_minus_term_kleene: plus_or_minus_term_kleene PLUS term
  264                          | plus_or_minus_term_kleene MINUS term
  265                          | %empty

  266 arith_expr: term plus_or_minus_term_kleene

  267 varias_coisas_factor_kleene: varias_coisas_factor_kleene STAR factor
  268                            | varias_coisas_factor_kleene AT factor
  269                            | varias_coisas_factor_kleene SLASH factor
  270                            | varias_coisas_factor_kleene PERCENT factor
  271                            | varias_coisas_factor_kleene DOUBLESLASH factor
  272                            | %empty

  273 term: factor varias_coisas_factor_kleene

  274 factor: PLUS factor
  275       | MINUS factor
  276       | TILDE factor
  277       | power

  278 opt_double_star_factor: DOUBLESTAR factor
  279                       | %empty

  280 power: atom_expr opt_double_star_factor

  281 opt_await: AWAIT
  282          | %empty

  283 trailer_kleene: %empty
  284               | trailer_kleene trailer LSQB

  285 atom_expr: opt_await atom trailer_kleene

  286 opt_yieldex_or_testlist_comp: yield_expr
  287                             | opt_testlist_comp

  288 opt_testlist_comp: testlist_comp
  289                  | %empty

  290 opt_dictorsetmaker: dictorsetmaker
  291                   | %empty

  292 string_plus: STRING string_plus
  293            | STRING

  294 atom: LPAR opt_yieldex_or_testlist_comp RPAR
  295     | LSQB opt_testlist_comp RSQB
  296     | LBRACE opt_dictorsetmaker RBRACE
  297     | NAME
  298     | NUMBER
  299     | string_plus
  300     | ELLIPSIS
  301     | NONE
  302     | TRUE
  303     | FALSE

  304 or_namedaexpr_test_star_expr: namedexpr_test
  305                             | star_expr

  306 comma_opt_namedaexpr_test_star_expr_kleene: comma_opt_namedaexpr_test_star_expr_kleene COMMA or_namedaexpr_test_star_expr
  307                                           | %empty

  308 comma_subscript_kleene: comma_subscript_kleene COMMA subscript
  309                       | %empty

  310 testlist_comp: or_namedaexpr_test_star_expr comp_for
  311              | or_namedaexpr_test_star_expr comma_opt_namedaexpr_test_star_expr_kleene opt_comma

  312 trailer: LPAR opt_arglist RPAR
  313        | LSQB subscriptlist RSQB
  314        | DOT NAME

  315 subscriptlist: subscript comma_subscript_kleene opt_comma

  316 opt_sliceop: sliceop
  317            | %empty

  318 subscript: test
  319          | opt_test COLON opt_test opt_sliceop

  320 sliceop: COLON opt_test

  321 expr_or_star_expr: expr
  322                  | star_expr

  323 comma_expr_or_star_expr_kleene: comma_expr_or_star_expr_kleene COMMA expr_or_star_expr
  324                               | %empty

  325 exprlist: expr_or_star_expr comma_expr_or_star_expr_kleene opt_comma

  326 testlist: test comma_test_fecho opt_comma

  327 or_test_star_expr: test
  328                  | star_expr

  329 comma_e_o_de_cima2_kleene: comma_e_o_de_cima2_kleene COMMA or_test_star_expr
  330                          | %empty

  331 opt_test_colon_test_doublestar_expr: test COLON test
  332                                    | DOUBLESTAR expr

  333 comma_e_o_de_cima3_kleene: comma_e_o_de_cima3_kleene COMMA opt_test_colon_test_doublestar_expr
  334                          | %empty

  335 opt_primeiro_menor_dictorsetmaker: comp_for
  336                                  | comma_e_o_de_cima3_kleene opt_comma

  337 opt_segundo_menor_dictorsetmaker: comp_for
  338                                 | comma_e_o_de_cima2_kleene opt_comma

  339 dictorsetmaker: opt_test_colon_test_doublestar_expr opt_primeiro_menor_dictorsetmaker
  340               | or_test_star_expr opt_segundo_menor_dictorsetmaker

  341 opt_lpar_opt_arglist_rpar: LPAR opt_arglist RPAR
  342                          | %empty

  343 classdef: CLASS NAME opt_lpar_opt_arglist_rpar COLON suite

  344 opt_comma_argument_kleene: opt_comma_argument_kleene COMMA argument
  345                          | %empty

  346 arglist: argument opt_comma_argument_kleene opt_comma

  347 opt_comp_for: comp_for
  348             | %empty

  349 argument: test opt_comp_for
  350         | test COLONEQUAL test
  351         | test EQUAL test
  352         | DOUBLESTAR test
  353         | STAR test

  354 comp_iter: comp_for
  355          | comp_if

  356 opt_comp_iter: comp_iter
  357              | %empty

  358 sync_comp_for: FOR exprlist IN or_test opt_comp_iter

  359 comp_for: ASYNC sync_comp_for
  360         | sync_comp_for

  361 comp_if: IF test_nocond opt_comp_iter

  362 opt_yield_arg: yield_arg
  363              | %empty

  364 yield_expr: YIELD opt_yield_arg

  365 yield_arg: FROM test
  366          | testlist_star_expr

  367 opt_type_comment_newline: TYPE_COMMENT NEWLINE
  368                         | %empty

  369 stmt_kleene_plus: stmt_kleene_plus stmt
  370                 | stmt

  371 func_body_suite: simple_stmt
  372                | NEWLINE opt_type_comment_newline INDENT stmt_kleene_plus DEDENT

  373 func_type_input: func_type newline_fecho

  374 opt_typelist: typelist
  375             | %empty

  376 func_type: LPAR opt_typelist RPAR ARROW test

  377 comma_test_fecho: comma_test_fecho COMMA test
  378                 | %empty

  379 opt_comma_doublestar_test: COMMA DOUBLESTAR test
  380                          | %empty

  381 opt_test: test
  382         | %empty

  383 opt_maluco: STAR opt_test comma_test_fecho opt_comma_doublestar_test
  384           | DOUBLESTAR test
  385           | %empty

  386 opt_comma_maluco: COMMA opt_maluco
  387                 | %empty

  388 typelist: test comma_test_fecho opt_comma_maluco
  389         | STAR opt_test comma_test_fecho opt_comma_doublestar_test
  390         | DOUBLESTAR test


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FALSE (258) 303
    AWAIT (259) 281
    ELSE (260) 193 216
    IMPORT (261) 142 154
    PASS (262) 123
    NONE (263) 301
    BREAK (264) 129
    EXCEPT (265) 210
    IN (266) 191 244 245 358
    RAISE (267) 139
    TRUE (268) 302
    CLASS (269) 343
    FINALLY (270) 195 201
    IS (271) 246 247
    RETURN (272) 133
    AND (273) 230
    CONTINUE (274) 130
    FOR (275) 191 358
    LAMBDA (276) 224
    TRY (277) 199
    AS (278) 155 205
    DEF (279) 24
    FROM (280) 135 154 365
    NONLOCAL (281) 171
    WHILE (282) 190
    ASSERT (283) 174
    DEL (284) 122
    GLOBAL (285) 170
    NOT (286) 233 245 247
    WITH (287) 204
    ASYNC (288) 19 184 185 186 359
    ELIF (289) 188
    IF (290) 187 216 361
    YIELD (291) 364
    EQEQUAL (292) 240
    NOTEQUAL (293) 243
    LEFTSHIFT (294) 258
    RIGHTSHIFT (295) 259
    LESSEQUAL (296) 242
    GREATEREQUAL (297) 241
    LESS (298) 238
    GREATER (299) 239
    TILDE (300) 276
    PERCENT (301) 270
    VBAR (302) 249
    AMPER (303) 255
    DOUBLESLASH (304) 271
    SLASH (305) 52 75 269
    DOUBLESTAR (306) 32 39 62 69 80 278 332 352 379 384 390
    STAR (307) 38 68 79 151 248 267 353 383 389
    MINUS (308) 264 275
    PLUS (309) 263 274
    CIRCUMFLEX (310) 252
    EQUAL (311) 56 101 102 104 351
    COMMA (312) 30 34 42 50 52 58 64 66 71 75 76 106 159 162 168 172 202 306 308 323 329 333 344 377 379 386
    COLON (313) 24 54 104 105 187 188 190 191 193 195 197 198 199 201 204 224 319 320 331 343
    LPAR (314) 12 27 152 294 312 341 376
    RPAR (315) 12 27 152 294 312 341 376
    LSQB (316) 284 295 313
    RSQB (317) 295 313
    LBRACE (318) 296
    RBRACE (319) 296
    AT (320) 11 12 268
    DOT (321) 145 147 165 314
    ELLIPSIS (322) 146 148 300
    PLUSEQUAL (323) 109
    MINEQUAL (324) 110
    COLONEQUAL (325) 213 350
    DOUBLESTAREQUAL (326) 120
    STAREQUAL (327) 111
    DOUBLESLASHEQUAL (328) 121
    SLASHEQUAL (329) 113
    ATEQUAL (330) 112
    PERCENTEQUAL (331) 114
    AMPEREQUAL (332) 115
    VBAREQUAL (333) 116
    CIRCUMFLEXEQUAL (334) 117
    RIGHTSHIFTEQUAL (335) 119
    LEFTSHIFTEQUAL (336) 118
    STRING (337) 292 293
    NAME (338) 24 55 81 155 157 165 167 168 170 171 297 314 343
    NUMBER (339) 298
    INDENT (340) 212 372
    DEDENT (341) 212 372
    ARROW (342) 20 376
    NEWLINE (343) 5 6 7 11 12 88 212 367 372
    OR (344) 227
    TYPE_COMMENT (345) 22 36 44 367
    SEMICOLON (346) 84 86
    LOW (347)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    start_program (94)
        on left: 1 2 3
        on right: 0 1 2
    single_input (95)
        on left: 4 5 6
        on right: 1
    newline_fecho (96)
        on left: 7 8
        on right: 7 373
    opt_arglist (97)
        on left: 9 10
        on right: 12 312 341
    decorator (98)
        on left: 11 12
        on right: 13 14
    decorator_fecho_plus (99)
        on left: 13 14
        on right: 13 15
    decorators (100)
        on left: 15
        on right: 16 17 18
    decorated (101)
        on left: 16 17 18
        on right: 182
    async_funcdef (102)
        on left: 19
        on right: 18
    opt_arrow_test (103)
        on left: 20 21
        on right: 24
    opt_typecomment (104)
        on left: 22 23
        on right: 24 30 32 34 39 42 46 52 103 192 204
    funcdef (105)
        on left: 24
        on right: 17 19 180 184
    opt_typedargslist (106)
        on left: 25 26
        on right: 27
    parameters (107)
        on left: 27
        on right: 24
    opt_tfpdef (108)
        on left: 28 29
        on right: 38
    kleene_gigante (109)
        on left: 30 31
        on right: 30 38 46 52 53
    opt_mediano (110)
        on left: 32 33
        on right: 34
    opt_maiorzin (111)
        on left: 34 35
        on right: 37
    typecomment_or_maiorzin (112)
        on left: 36 37
        on right: 38
    star_e_outros_or_doublestar_e_outros (113)
        on left: 38 39
        on right: 40 47 53
    opt_das_estrelas (114)
        on left: 40 41
        on right: 42
    opt_comma_opts (115)
        on left: 42 43
        on right: 45
    type_comment_or_opt_comma_opts (116)
        on left: 44 45
        on right: 46 53
    or_enorme (117)
        on left: 46 47
        on right: 48
    opt_enorme (118)
        on left: 48 49
        on right: 50
    opt_comma_enorme (119)
        on left: 50 51
        on right: 52
    typedargslist (120)
        on left: 52 53
        on right: 25
    opt_colon_test (121)
        on left: 54
        on right: 55
    tfpdef (122)
        on left: 55
        on right: 28 30 32 39 46 52 53
    opt_equal_test (123)
        on left: 56 57
        on right: 30 46 52 53 66 73 76 77 78
    opt_comma (124)
        on left: 58 59
        on right: 32 39 62 69 80 108 161 311 315 325 326 336 338 346
    opt_vfpdef (125)
        on left: 60 61
        on right: 68 79
    opt_doublestar_vfpdef_comma (126)
        on left: 62 63
        on right: 64
    opt_comma_e_o_de_cima (127)
        on left: 64 65
        on right: 68 79
    comma_vfpdef_opt_equal_test_kleene (128)
        on left: 66 67
        on right: 66 68 73 76 77 78 79
    opt_menor_varargslist (129)
        on left: 68 69 70
        on right: 71 74
    opt_segundo_menor_varargslist (130)
        on left: 71 72
        on right: 73 78
    opt_terceiro_menor_varargslist (131)
        on left: 73 74
        on right: 76
    comma_slash (132)
        on left: 75
        on right: 76 77
    varargslist (133)
        on left: 76 77 78 79 80
        on right: 222
    vfpdef (134)
        on left: 81
        on right: 60 62 66 69 73 76 77 78 80
    stmt (135)
        on left: 82 83
        on right: 369 370
    semicolon_smallstmt_fecho (136)
        on left: 84 85
        on right: 84 88
    opt_semicolon (137)
        on left: 86 87
        on right: 88
    simple_stmt (138)
        on left: 88
        on right: 4 82 211 371
    small_stmt (139)
        on left: 89 90 91 92 93 94 95 96
        on right: 84 88
    yield_expr_or_testlist (140)
        on left: 97 98
        on right: 103
    yield_expr_or_testlist_star_expr (141)
        on left: 99 100
        on right: 101 102 104
    equal_yield_expr_or_testlist_star_expr_plus (142)
        on left: 101 102
        on right: 101 103
    expr_stmt (143)
        on left: 103
        on right: 89
    annassign (144)
        on left: 104 105
        on right: 103
    comma_or_test_star_expr_kleene (145)
        on left: 106 107
        on right: 106 108
    testlist_star_expr (146)
        on left: 108
        on right: 100 103 131 366
    augassign (147)
        on left: 109 110 111 112 113 114 115 116 117 118 119 120 121
        on right: 103
    del_stmt (148)
        on left: 122
        on right: 90
    pass_stmt (149)
        on left: 123
        on right: 91
    flow_stmt (150)
        on left: 124 125 126 127 128
        on right: 92
    break_stmt (151)
        on left: 129
        on right: 124
    continue_stmt (152)
        on left: 130
        on right: 125
    opt_testlist_star_expr (153)
        on left: 131 132
        on right: 133
    return_stmt (154)
        on left: 133
        on right: 126
    yield_stmt (155)
        on left: 134
        on right: 128
    opt_from_test (156)
        on left: 135 136
        on right: 137
    opt_test_opt_from_test (157)
        on left: 137 138
        on right: 139
    raise_stmt (158)
        on left: 139
        on right: 127
    import_stmt (159)
        on left: 140 141
        on right: 93
    import_name (160)
        on left: 142
        on right: 140
    dot_or_ellipsis_kleene (161)
        on left: 143 144
        on right: 149
    dot_or_ellipsis_plus (162)
        on left: 145 146 147 148
        on right: 143 145 146 150
    dot_or_ellipsis_kleene_dotted_name_or_dot_or_ellipsis_plus (163)
        on left: 149 150
        on right: 154
    star_or_lpar_import_as_names_rpar_or_import_as_names (164)
        on left: 151 152 153
        on right: 154
    import_from (165)
        on left: 154
        on right: 141
    opt_as_name (166)
        on left: 155 156
        on right: 157 158 208
    import_as_name (167)
        on left: 157
        on right: 159 161
    dotted_as_name (168)
        on left: 158
        on right: 162 164
    comma_import_as_name_kleene (169)
        on left: 159 160
        on right: 159 161
    import_as_names (170)
        on left: 161
        on right: 152 153
    comma_dotted_as_name_kleene (171)
        on left: 162 163
        on right: 162 164
    dotted_as_names (172)
        on left: 164
        on right: 142
    dot_name_kleene (173)
        on left: 165 166
        on right: 165 167
    dotted_name (174)
        on left: 167
        on right: 11 12 149 158
    comma_name_kleene (175)
        on left: 168 169
        on right: 168 170 171
    global_stmt (176)
        on left: 170
        on right: 94
    nonlocal_stmt (177)
        on left: 171
        on right: 95
    opt_comma_test (178)
        on left: 172 173
        on right: 174
    assert_stmt (179)
        on left: 174
        on right: 96
    compound_stmt (180)
        on left: 175 176 177 178 179 180 181 182 183
        on right: 5 83
    async_stmt (181)
        on left: 184 185 186
        on right: 183
    if_stmt (182)
        on left: 187
        on right: 175
    elif_colon_suite_kleene (183)
        on left: 188 189
        on right: 187 188
    while_stmt (184)
        on left: 190
        on right: 176
    for_in_colon_prefix (185)
        on left: 191
        on right: 192
    for_stmt (186)
        on left: 192
        on right: 177 186
    opt_else_colon_suite (187)
        on left: 193 194
        on right: 187 190 192 200
    opt_finally_colon_suite (188)
        on left: 195 196
        on right: 200
    exceptclausecolonsuite_plus (189)
        on left: 197 198
        on right: 197 200
    start_try_stmt (190)
        on left: 199
        on right: 200 201
    try_stmt (191)
        on left: 200 201
        on right: 178
    comma_with_item_kleene (192)
        on left: 202 203
        on right: 202 204
    with_stmt (193)
        on left: 204
        on right: 179 185
    opt_as_expr (194)
        on left: 205 206
        on right: 207
    with_item (195)
        on left: 207
        on right: 202 204
    opt_test_opt_as_name (196)
        on left: 208 209
        on right: 210
    except_clause (197)
        on left: 210
        on right: 197 198
    suite (198)
        on left: 211 212
        on right: 187 188 190 192 193 195 197 198 199 201 204 343
    opt_colonequal_test (199)
        on left: 213 214
        on right: 215
    namedexpr_test (200)
        on left: 215
        on right: 187 188 190 304
    opt_if_ortest_else_test (201)
        on left: 216 217
        on right: 218
    test (202)
        on left: 218 219
        on right: 20 54 56 104 105 135 137 172 174 207 208 213 215 216 225 318 326 327 331 349 350 351 352 353 365 376 377 379 381 384 388 390
    test_nocond (203)
        on left: 220 221
        on right: 226 361
    opt_varargslist (204)
        on left: 222 223
        on right: 224
    prefix_lambdef (205)
        on left: 224
        on right: 225 226
    lambdef (206)
        on left: 225
        on right: 219
    lambdef_nocond (207)
        on left: 226
        on right: 221
    or_and_test_kleene (208)
        on left: 227 228
        on right: 227 229
    or_test (209)
        on left: 229
        on right: 216 218 220 358
    and_not_test_kleene (210)
        on left: 230 231
        on right: 230 232
    and_test (211)
        on left: 232
        on right: 227 229
    not_test (212)
        on left: 233 234
        on right: 230 232 233
    comp_op_kleene (213)
        on left: 235 236
        on right: 235 237
    comparison (214)
        on left: 237
        on right: 234
    comp_op (215)
        on left: 238 239 240 241 242 243 244 245 246 247
        on right: 235
    star_expr (216)
        on left: 248
        on right: 305 322 328
    vbar_xor_expr_kleene (217)
        on left: 249 250
        on right: 249 251
    expr (218)
        on left: 251
        on right: 205 235 237 248 321 332
    circumflex_and_expr_kleene (219)
        on left: 252 253
        on right: 252 254
    xor_expr (220)
        on left: 254
        on right: 249 251
    amper_shift_expr_kleene (221)
        on left: 255 256
        on right: 255 257
    and_expr (222)
        on left: 257
        on right: 252 254
    left_shift_or_right_shift (223)
        on left: 258 259
        on right: 260
    left_shift_or_right_shift_arith_expr_kleene (224)
        on left: 260 261
        on right: 260 262
    shift_expr (225)
        on left: 262
        on right: 255 257
    plus_or_minus_term_kleene (226)
        on left: 263 264 265
        on right: 263 264 266
    arith_expr (227)
        on left: 266
        on right: 260 262
    varias_coisas_factor_kleene (228)
        on left: 267 268 269 270 271 272
        on right: 267 268 269 270 271 273
    term (229)
        on left: 273
        on right: 263 264 266
    factor (230)
        on left: 274 275 276 277
        on right: 267 268 269 270 271 273 274 275 276 278
    opt_double_star_factor (231)
        on left: 278 279
        on right: 280
    power (232)
        on left: 280
        on right: 277
    opt_await (233)
        on left: 281 282
        on right: 285
    trailer_kleene (234)
        on left: 283 284
        on right: 284 285
    atom_expr (235)
        on left: 285
        on right: 280
    opt_yieldex_or_testlist_comp (236)
        on left: 286 287
        on right: 294
    opt_testlist_comp (237)
        on left: 288 289
        on right: 287 295
    opt_dictorsetmaker (238)
        on left: 290 291
        on right: 296
    string_plus (239)
        on left: 292 293
        on right: 292 299
    atom (240)
        on left: 294 295 296 297 298 299 300 301 302 303
        on right: 285
    or_namedaexpr_test_star_expr (241)
        on left: 304 305
        on right: 306 310 311
    comma_opt_namedaexpr_test_star_expr_kleene (242)
        on left: 306 307
        on right: 306 311
    comma_subscript_kleene (243)
        on left: 308 309
        on right: 308 315
    testlist_comp (244)
        on left: 310 311
        on right: 288
    trailer (245)
        on left: 312 313 314
        on right: 284
    subscriptlist (246)
        on left: 315
        on right: 313
    opt_sliceop (247)
        on left: 316 317
        on right: 319
    subscript (248)
        on left: 318 319
        on right: 308 315
    sliceop (249)
        on left: 320
        on right: 316
    expr_or_star_expr (250)
        on left: 321 322
        on right: 323 325
    comma_expr_or_star_expr_kleene (251)
        on left: 323 324
        on right: 323 325
    exprlist (252)
        on left: 325
        on right: 122 191 358
    testlist (253)
        on left: 326
        on right: 98 191
    or_test_star_expr (254)
        on left: 327 328
        on right: 106 108 329 340
    comma_e_o_de_cima2_kleene (255)
        on left: 329 330
        on right: 329 338
    opt_test_colon_test_doublestar_expr (256)
        on left: 331 332
        on right: 333 339
    comma_e_o_de_cima3_kleene (257)
        on left: 333 334
        on right: 333 336
    opt_primeiro_menor_dictorsetmaker (258)
        on left: 335 336
        on right: 339
    opt_segundo_menor_dictorsetmaker (259)
        on left: 337 338
        on right: 340
    dictorsetmaker (260)
        on left: 339 340
        on right: 290
    opt_lpar_opt_arglist_rpar (261)
        on left: 341 342
        on right: 343
    classdef (262)
        on left: 343
        on right: 16 181
    opt_comma_argument_kleene (263)
        on left: 344 345
        on right: 344 346
    arglist (264)
        on left: 346
        on right: 9
    opt_comp_for (265)
        on left: 347 348
        on right: 349
    argument (266)
        on left: 349 350 351 352 353
        on right: 344 346
    comp_iter (267)
        on left: 354 355
        on right: 356
    opt_comp_iter (268)
        on left: 356 357
        on right: 358 361
    sync_comp_for (269)
        on left: 358
        on right: 359 360
    comp_for (270)
        on left: 359 360
        on right: 310 335 337 347 354
    comp_if (271)
        on left: 361
        on right: 355
    opt_yield_arg (272)
        on left: 362 363
        on right: 364
    yield_expr (273)
        on left: 364
        on right: 97 99 134 286
    yield_arg (274)
        on left: 365 366
        on right: 362
    opt_type_comment_newline (275)
        on left: 367 368
        on right: 372
    stmt_kleene_plus (276)
        on left: 369 370
        on right: 212 369 372
    func_body_suite (277)
        on left: 371 372
        on right: 24
    func_type_input (278)
        on left: 373
        on right: 2
    opt_typelist (279)
        on left: 374 375
        on right: 376
    func_type (280)
        on left: 376
        on right: 373
    comma_test_fecho (281)
        on left: 377 378
        on right: 326 377 383 388 389
    opt_comma_doublestar_test (282)
        on left: 379 380
        on right: 383 389
    opt_test (283)
        on left: 381 382
        on right: 319 320 383 389
    opt_maluco (284)
        on left: 383 384 385
        on right: 386
    opt_comma_maluco (285)
        on left: 386 387
        on right: 388
    typelist (286)
        on left: 388 389 390
        on right: 374


State 0

    0 $accept: • start_program $end
    1 start_program: • start_program single_input
    2              | • start_program func_type_input
    3              | • %empty

    $default  reduce using rule 3 (start_program)

    start_program  go to state 1


State 1

    0 $accept: start_program • $end
    1 start_program: start_program • single_input
    2              | start_program • func_type_input
    4 single_input: • simple_stmt
    5             | • compound_stmt NEWLINE
    6             | • NEWLINE
   11 decorator: • AT dotted_name NEWLINE
   12          | • AT dotted_name LPAR opt_arglist RPAR NEWLINE
   13 decorator_fecho_plus: • decorator_fecho_plus decorator
   14                     | • decorator
   15 decorators: • decorator_fecho_plus
   16 decorated: • decorators classdef
   17          | • decorators funcdef
   18          | • decorators async_funcdef
   24 funcdef: • DEF NAME parameters opt_arrow_test COLON opt_typecomment func_body_suite
   88 simple_stmt: • small_stmt semicolon_smallstmt_fecho opt_semicolon NEWLINE
   89 small_stmt: • expr_stmt
   90           | • del_stmt
   91           | • pass_stmt
   92           | • flow_stmt
   93           | • import_stmt
   94           | • global_stmt
   95           | • nonlocal_stmt
   96           | • assert_stmt
  103 expr_stmt: • testlist_star_expr annassign testlist_star_expr augassign yield_expr_or_testlist testlist_star_expr equal_yield_expr_or_testlist_star_expr_plus opt_typecomment testlist_star_expr
  108 testlist_star_expr: • or_test_star_expr comma_or_test_star_expr_kleene opt_comma
  122 del_stmt: • DEL exprlist
  123 pass_stmt: • PASS
  124 flow_stmt: • break_stmt
  125          | • continue_stmt
  126          | • return_stmt
  127          | • raise_stmt
  128          | • yield_stmt
  129 break_stmt: • BREAK
  130 continue_stmt: • CONTINUE
  133 return_stmt: • RETURN opt_testlist_star_expr
  134 yield_stmt: • yield_expr
  139 raise_stmt: • RAISE opt_test_opt_from_test
  140 import_stmt: • import_name
  141            | • import_from
  142 import_name: • IMPORT dotted_as_names
  154 import_from: • FROM dot_or_ellipsis_kleene_dotted_name_or_dot_or_ellipsis_plus IMPORT star_or_lpar_import_as_names_rpar_or_import_as_names
  170 global_stmt: • GLOBAL NAME comma_name_kleene
  171 nonlocal_stmt: • NONLOCAL NAME comma_name_kleene
  174 assert_stmt: • ASSERT test opt_comma_test
  175 compound_stmt: • if_stmt
  176              | • while_stmt
  177              | • for_stmt
  178              | • try_stmt
  179              | • with_stmt
  180              | • funcdef
  181              | • classdef
  182              | • decorated
  183              | • async_stmt
  184 async_stmt: • ASYNC funcdef
  185           | • ASYNC with_stmt
  186           | • ASYNC for_stmt
  187 if_stmt: • IF namedexpr_test COLON suite elif_colon_suite_kleene opt_else_colon_suite
  190 while_stmt: • WHILE namedexpr_test COLON suite opt_else_colon_suite
  191 for_in_colon_prefix: • FOR exprlist IN testlist COLON
  192 for_stmt: • for_in_colon_prefix opt_typecomment suite opt_else_colon_suite
  199 start_try_stmt: • TRY COLON suite
  200 try_stmt: • start_try_stmt exceptclausecolonsuite_plus opt_else_colon_suite opt_finally_colon_suite
  201         | • start_try_stmt FINALLY COLON suite
  204 with_stmt: • WITH with_item comma_with_item_kleene COLON opt_typecomment suite
  218 test: • or_test opt_if_ortest_else_test
  219     | • lambdef
  224 prefix_lambdef: • LAMBDA opt_varargslist COLON
  225 lambdef: • prefix_lambdef test
  229 or_test: • and_test or_and_test_kleene
  232 and_test: • not_test and_not_test_kleene
  233 not_test: • NOT not_test
  234         | • comparison
  237 comparison: • expr comp_op_kleene
  248 star_expr: • STAR expr
  251 expr: • xor_expr vbar_xor_expr_kleene
  254 xor_expr: • and_expr circumflex_and_expr_kleene
  257 and_expr: • shift_expr amper_shift_expr_kleene
  262 shift_expr: • arith_expr left_shift_or_right_shift_arith_expr_kleene
  266 arith_expr: • term plus_or_minus_term_kleene
  273 term: • factor varias_coisas_factor_kleene
  274 factor: • PLUS factor
  275       | • MINUS factor
  276       | • TILDE factor
  277       | • power
  280 power: • atom_expr opt_double_star_factor
  281 opt_await: • AWAIT
  282          | • %empty  [FALSE, NONE, TRUE, LPAR, LSQB, LBRACE, ELLIPSIS, STRING, NAME, NUMBER]
  285 atom_expr: • opt_await atom trailer_kleene
  327 or_test_star_expr: • test
  328                  | • star_expr
  343 classdef: • CLASS NAME opt_lpar_opt_arglist_rpa